D_COL1	EQU 0x20
D_COL2	EQU 0x21
D_COL3	EQU 0x22
D_COL4	EQU 0x23
D_COL5	EQU 0x24
TEST	EQU 0X25
KEYVAL	EQU 0X26
COL_NUM	EQU 0X27
COL_CHOICE 	EQU 0x28
KEYVAL_INIT	EQU 0x29
COUNT1	EQU 0x30
COUNT2	EQU 0x31
TEMP	EQU 0x32
SHIFT EQU 1
TMR0_Start	EQU 0x62



org 0000h
	GOTO MAIN
org 0004h
	GOTO INT

MAIN
	BCF 	INTCON, GIE
	BCF 	STATUS, RP1
	BSF 	STATUS, RP0 	; BANK1
	CLRF	TRISD  		; output for keypad columns
	MOVLW	0xF0 		; set inputs for rows
	MOVWF	TRISB 
	CLRF 	TRISC 		; outputs for LED Matrix columns and TX pin
	CLRF	TRISA 		;outputs for ROWS in LED Matrix
	CLRF	TRISE		;OUTPUTS
	MOVLW	0X84		;1000 0100
	MOVWF	OPTION_REG 	; enable port B pullup resistors ( RBPU) and configure TMR0
	MOVLW	0x20		;0010 0000
	MOVWF	TXSTA		;enable transmition
	MOVLW	0x06		;9.6 BAUD Rate with 6.99% error	( now we just need to put a value to TXREG to transmit)
	BSF 	INTCON,RBIE	; Set interrupt on change on Port B <4:7>

	BSF	STATUS, RP0	;BANK0
	CLRF	TXREG
	CLRF	PORTB
	CLRF	PORTD
	CLRF	PORTA
	CLRF	PORTE
	MOVLW	0xFF
	MOVWF	PORTC
	CLRF	TEST
	MOVLW	0X08
	MOVWF	KEYVAL_INIT
	BCF	INTCON, RBIF
	BSF	INTCON, GIE
	BSF	INTCON, PEIE
	LOOP
		MOVFW	D_COL1
		MOVWF	PORTA
		CALL ROTATE_TEMP
		BCF	PORTC, 0
		CALL DELAY_3.34ms

		MOVFW	D_COL2
		BSF	PORTC, 0
		MOVWF	PORTA
		CALL ROTATE_TEMP
		BCF	PORTC, 1
		CALL DELAY_3.34ms

		MOVFW	D_COL3
		BSF	PORTC, 1
		MOVWF	PORTA
		CALL ROTATE_TEMP
		BCF	PORTC, 2
		CALL DELAY_3.34ms

		MOVFW	D_COL4
		BSF	PORTC, 2
		MOVWF	PORTA
		CALL ROTATE_TEMP
		BCF	PORTC, 3
		CALL DELAY_3.34ms

		MOVFW	D_COL5
		BSF	PORTC, 3
		MOVWF	PORTA
		CALL ROTATE_TEMP
		BCF	PORTC, 4
		CALL DELAY_3.34ms
		GOTO LOOP

INT
	BCF	INTCON, GIE
	BTFSS	INTCON, TMR0IF
	GOTO CONTINUE
	BTFSS	TEST, 0 	;CHECK IF THE TMR0IF =1 RESULTED FORM INTERRUPT
	GOTO	CONTINUE
	BCF	TEST, 0
	BCF	INTCON, TMR0IF
	BCF	INTCON, TMR0IE
	BTFSC	PORTB, 7
	BTFSS	PORTB, 6
	GOTO	KEY_DOWN
	BTFSC	PORTB, 5
	BTFSS	PORTB, 4
	GOTO	KEY_DOWN
	GOTO	ENDINT
	
KEY_DOWN
	BCF	TEST , SHIFT
	MOVLW	0x7E	;0111 1110
	MOVWF	PORTD
	BTFSS	PORTB,4
	BSF	TEST, SHIFT
	MOVLW	0xFF
	MOVWF	PORTD
	MOVFW	KEYVAL_INIT
	MOVWF	KEYVAL
	
	MOVLW 	0xFE	; column 0 set to 0
	MOVWF	PORTD	;
	MOVWF	COL_CHOICE
ROW_CHECK
	MOVFW	KEYVAL	; STORE KEYVAL FOR LATER ADDITION IF FOUND
	BTFSS	PORTB, 7 	;CHECK ROW 0
	GOTO	ADD1
	BTFSS	PORTB, 6	;CHECK ROW 1
	GOTO	ADD2
	BTFSS	PORTB, 5	;CHECK ROW 2
	GOTO	ADD3
	BTFSS	PORTD, 0	; CHECK IF COL0
	GOTO	CHANGE_COL
	BTFSS	PORTB, 4	;Check Row 3
	GOTO 	ADD4
CHANGE_COL	
	MOVLW 	0xFF
	XORWF	COL_CHOICE,1 ;exp 11111110 ->00000001  
	RLF	COL_CHOICE,0 ;00000001 -> 00000010
	XORLW	0xFF 		; 00000010 -> 11111101
	MOVWF 	COL_CHOICE
	MOVWF	PORTD
	DECF	KEYVAL
	SUBWF	KEYVAL,0
	BTFSC	STATUS, Z	;CHECK IF IT WAS LAST COLUMN
	GOTO	ENDINT
	GOTO	ROW_CHECK
	
ADD1
	ADDWF	KEYVAL_INIT, 0
ADD2
	ADDWF	KEYVAL_INIT, 0
ADD3
	ADDWF	KEYVAL_INIT, 0
ADD4
	MOVWF	KEYVAL
	BTFSC	TEST, SHIFT
	GOTO	BIG_LOOKUP_TABLE
	GOTO SMALL_LOOKUP_TABLE
BIG_LOOKUP_TABLE
	CALL ASCII_LOOKUP_BIG
	BTFSS	PIR1, TXIF	;TXIF=1 => TXREG is empty	
	GOTO 	$-1
	MOVWF	TXREG
	MOVFW	KEYVAL
	CALL	LOOKUP_COL1_BIG
	MOVWF	D_COL1
	MOVFW	KEYVAL
	CALL	LOOKUP_COL2_BIG
	MOVWF	D_COL2
	MOVFW	KEYVAL
	CALL 	LOOKUP_COL3_BIG
	MOVWF	D_COL3
	MOVFW	KEYVAL
	CALL	LOOKUP_COL4_BIG
	MOVWF	D_COL4
	MOVWF	KEYVAL
	CALL	LOOKUP_COL5_BIG
	MOVFW	D_COL5
	MOVLW	0XFF
	MOVWF	PORTD
	GOTO ENDINT

SMALL_LOOKUP_TABLE
	CALL ASCII_LOOKUP_SMALL
	BTFSS	PIR1, TXIF	;TXIF=1 => TXREG is empty	
	GOTO 	$-1
	MOVWF	TXREG
	MOVFW	KEYVAL
	CALL	LOOKUP_COL1_SMALL
	MOVWF	D_COL1
	MOVFW	KEYVAL
	CALL	LOOKUP_COL2_SMALL
	MOVWF	D_COL2
	MOVFW	KEYVAL
	CALL 	LOOKUP_COL3_SMALL
	MOVWF	D_COL3
	MOVFW	KEYVAL
	CALL	LOOKUP_COL4_SMALL
	MOVWF	D_COL4
	MOVWF	KEYVAL
	CALL	LOOKUP_COL5_SMALL
	MOVFW	D_COL5
	MOVLW	0XFF
	MOVWF	PORTD
	GOTO ENDINT	
CONTINUE
	BTFSS	INTCON, RBIF
	GOTO	ENDINT
	BCF	INTCON, RBIF
	MOVLW	TMR0_Start
	BSF	TEST,0
	BSF	INTCON,	TMR0IE

ENDINT
	BSF INTCON,GIE
	RETFIE
	
	
	
ASCII_LOOKUP_BIG
	ADDWF	PCL
	RETLW	0x00
	RETLW	0x2D 	;-
	RETLW	0x2B	;+
	RETLW	0x2A	;*
	RETLW	0x2F	;/
	RETLW	0x50	;P
	RETLW	0x4F	;O
	RETLW 	0x00	;SHIFT NO NEED FOR ASCII
	RETLW	0x4C	;L
	RETLW	0x4D	;M
	RETLW	0x4E	;N
	RETLW	0x42	;B
	RETLW	0x56	;V
	RETLW	0x43	;C
	RETLW	0x58	;X
	RETLW	0x5A	;Z
	RETLW	0x4B	;K
	RETLW	0x4A	;J
	RETLW	0x48	;H
	RETLW	0x47	;G
	RETLW	0x46	;F
	RETLW	0x44	;D
	RETLW	0x53	;S
	RETLW	0x41	;A
	RETLW	0x49	;I
	RETLW	0x55	;U
	RETLW	0x59	;Y
	RETLW	0x54	;T
	RETLW	0x52	;R
	RETLW	0x45	;E
	RETLW	0x57	;W
	RETLW	0x51	;Q
	
ASCII_LOOKUP_SMALL
	ADDWF	PCL
	RETLW	0x00
	RETLW	0x2D 	;-
	RETLW	0x2B	;+
	RETLW	0x2A	;*
	RETLW	0x2F	;/
	RETLW	0x70	;p
	RETLW	0x6F	;o
	RETLW 	0x00	;SHIFT NO NEED FOR ASCII 
	RETLW	0x6C	;l
	RETLW	0x6D	;m
	RETLW	0x6E	;n
	RETLW	0x62	;b
	RETLW	0x76	;v
	RETLW	0x63	;c
	RETLW	0x78	;x
	RETLW	0x7A	;z
	RETLW	0x6B	;k
	RETLW	0x6A	;j
	RETLW	0x68	;h
	RETLW	0x67	;g
	RETLW	0x66	;f
	RETLW	0x64	;d
	RETLW	0x73	;s
	RETLW	0x61	;a
	RETLW	0x69	;i
	RETLW	0x75	;u
	RETLW	0x79	;y
	RETLW	0x74	;t
	RETLW	0x72	;r
	RETLW	0x65	;e
	RETLW	0x77	;w
	RETLW	0x71	;q
	
DELAY_3.34ms
	CLRF	COUNT2	; 1 cycle
	MOVLW	0x03	; 1 cycle
	MOVWF	COUNT1	; 1 cycle
LOOP1	
	DECF	COUNT1	; value in Count1* cycles
	BTFSC	STATUS, Z ; 2 x (value in Count1-1) +1
	RETURN			;2 cycles
LOOP2
	DECF	COUNT2		; 256 x value in count1 cycles
	BTFSC	STATUS, Z	; 255 x 2 x value in Count1 cycle +(value in Count1)
	GOTO	LOOP1		;value in count1 cycles
	GOTO	LOOP2		;255 x 2 x value in Count1 cycle

	
ROTATE_TEMP
	ANDLW	0xC0
	MOVWF	TEMP
	RRF	TEMP, 1
	RRF	TEMP, 1
	RRF	TEMP, 1
	RRF	TEMP, 1
	RRF	TEMP, 1
	RRF	TEMP, 0
	MOVWF	PORTE
	RETURN

LOOKUP_COL1_BIG
	RETLW	0x00

LOOKUP_COL2_BIG
	RETLW	0x00

LOOKUP_COL3_BIG
	RETLW	0x00

LOOKUP_COL4_BIG
	RETLW	0x00

LOOKUP_COL5_BIG
	RETLW	0x00

LOOKUP_COL1_SMALL
	RETLW	0x00

LOOKUP_COL2_SMALL
	RETLW	0x00

LOOKUP_COL3_SMALL
	RETLW	0x00

LOOKUP_COL4_SMALL
	RETLW	0x00

LOOKUP_COL5_SMALL
	RETLW	0x00
